// Convert to right VW variable
//
// font-size: vw(14);
//
@function vw($value) {
  @return (0.3125vw * $value);
}

@mixin male {
  :global(.body-male) & {
    @content;
  }
}

@mixin female {
  :global(.body-female) & {
    @content;
  }
}

@mixin auth {
  :global(.body-auth) & {
    @content;
  }
}

@mixin no-auth {
  :global(.body-no-auth) & {
    @content;
  }
}

@mixin after {
  &::after {
    content: '';
    display: block;
    @content;
  }
}

@mixin before {
  &::before {
    content: '';
    display: block;
    @content;
  }
}

@mixin inline-block {
  display: inline-block;
  vertical-align: top;
  zoom: 1;
}

@mixin brand-color($property: color, $important: null) {
  #{$property}: $color-brand $important;
}

@mixin brand-f-color {
  @include brand-color(color)
}

@mixin brand-border-color {
  @include brand-color(border-color)
}


@mixin any-link {
  &,
  &:visited {
    @content;
  }
}

@mixin absolute-centring {
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  margin: auto;
}

@mixin absolute-v-centring {
  position: absolute;
  top: 0;
  bottom: 0;
  margin: auto 0;
}


@mixin placeholder {
  &::-webkit-input-placeholder { @content; }
  &:-moz-placeholder { @content; }
  &::-moz-placeholder { @content; }
  &:-ms-input-placeholder { @content; }
}

@mixin clearfix {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

@mixin no-user-select {
  -webkit-touch-callout: none;
  -webkit-user-select: none;
  -khtml-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
}

@mixin square-block {
  width: 100%;
  position: relative;

  &::after {
    content: '';
    display: block;
    padding-bottom: 100%;
    line-height: 0;
    font-size: 0;
  }
}

@mixin triangle($dir, $size, $color) {
  content: '';
  width: 0;
  height: 0;
  display: block;
  line-height: 0;
  border: $size transparent solid;
  font-size: 0;

  @if ($color == 'brand') {
    @if ($dir == 'up') {
      @include brand-color(border-bottom-color);
      border-top-width: 0;
    }
    @else if ($dir == 'right') {
      @include brand-color(border-left-color);
      border-right-width: 0;
    }
    @else if ($dir == 'down') {
      @include brand-color(border-top-color);
      border-bottom-width: 0;
    }
    @else if ($dir == 'left') {
      @include brand-color(border-right-color);
      border-left-width: 0;
    }
  }
  @else {
    @if ($dir == 'up') {
      border-bottom-color: $color;
      border-top-width: 0;
    }
    @else if ($dir == 'right') {
      border-left-color: $color;
      border-right-width: 0;
    }
    @else if ($dir == 'down') {
      border-top-color: $color;
      border-bottom-width: 0;
    }
    @else if ($dir == 'left') {
      border-right-color: $color;
      border-left-width: 0;
    }
  }
}

@mixin arrow($dir, $size, $width, $color) {
  content: '';
  width: $size;
  height: $size;
  display: block;
  border-top: $width solid $color;
  border-right: $width solid $color;

  @if ($dir == 'up') {
    transform: rotate(-45deg);
  }
  @else if ($dir == 'right') {
    transform: rotate(45deg);
  }
  @else if ($dir == 'down') {
    transform: rotate(135deg);
  }
  @else if ($dir == 'left') {
    transform: rotate(-135deg);
  }
}

@mixin tick($color) {
  width: 10px;
  height: 6px;
  background: transparent;
  border: 2px solid $color;
  border-top: none;
  border-right: none;
  transform: rotate(-45deg);
}

@mixin ellipsis($width: 100%) {
  max-width: $width;
  overflow: hidden;
  white-space: nowrap;
  text-overflow: ellipsis;
}

@mixin underline($width, $color: "") {
  border-bottom: $width solid transparent;
  transition: all .3s;

  @if ($color == "") {
    &:hover {
      @include brand-color(border-color);
    }
  }
  @else {
    &:hover {
      border-color: $color;
    }
  }
}

@mixin grayScaleActive {
  filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0.3333 0.3333 0.3333 0 0 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale"); /* Firefox 10+, Firefox on Android */
  filter: gray; /* IE6-9 */
  filter: grayscale(100%);
}

@mixin grayScaleDisable {
  filter: url("data:image/svg+xml;utf8,&lt;svg xmlns=\'http://www.w3.org/2000/svg\'&gt;&lt;filter id=\'grayscale\'&gt;&lt;feColorMatrix type=\'matrix\' values=\'1 0 0 0 0, 0 1 0 0 0, 0 0 1 0 0, 0 0 0 1 0\'/&gt;&lt;/filter&gt;&lt;/svg&gt;#grayscale");
  filter: grayscale(0);
}
